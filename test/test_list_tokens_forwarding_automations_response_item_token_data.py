"""
    CryptoAPIs

    Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: developers@cryptoapis.io
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import cryptoapis
from cryptoapis.model.list_tokens_forwarding_automations_response_item_token_data_bitcoin_omni_token import ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken
from cryptoapis.model.list_tokens_forwarding_automations_response_item_token_data_ethereum_token import ListTokensForwardingAutomationsResponseItemTokenDataEthereumToken
globals()['ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken'] = ListTokensForwardingAutomationsResponseItemTokenDataBitcoinOmniToken
globals()['ListTokensForwardingAutomationsResponseItemTokenDataEthereumToken'] = ListTokensForwardingAutomationsResponseItemTokenDataEthereumToken
from cryptoapis.model.list_tokens_forwarding_automations_response_item_token_data import ListTokensForwardingAutomationsResponseItemTokenData


class TestListTokensForwardingAutomationsResponseItemTokenData(unittest.TestCase):
    """ListTokensForwardingAutomationsResponseItemTokenData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testListTokensForwardingAutomationsResponseItemTokenData(self):
        """Test ListTokensForwardingAutomationsResponseItemTokenData"""
        # FIXME: construct object with mandatory attributes with example values
        # model = ListTokensForwardingAutomationsResponseItemTokenData()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()

"""
    CryptoAPIs

    Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: developers@cryptoapis.io
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import cryptoapis
from cryptoapis.model.tokens_forwarding_success_ethereumerc20token import TokensForwardingSuccessEthereumerc20token
from cryptoapis.model.tokens_forwarding_success_ethereumerc721token import TokensForwardingSuccessEthereumerc721token
from cryptoapis.model.tokens_forwarding_success_omnilayertoken import TokensForwardingSuccessOmnilayertoken
globals()['TokensForwardingSuccessEthereumerc20token'] = TokensForwardingSuccessEthereumerc20token
globals()['TokensForwardingSuccessEthereumerc721token'] = TokensForwardingSuccessEthereumerc721token
globals()['TokensForwardingSuccessOmnilayertoken'] = TokensForwardingSuccessOmnilayertoken
from cryptoapis.model.tokens_forwarding_success_token import TokensForwardingSuccessToken


class TestTokensForwardingSuccessToken(unittest.TestCase):
    """TokensForwardingSuccessToken unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testTokensForwardingSuccessToken(self):
        """Test TokensForwardingSuccessToken"""
        # FIXME: construct object with mandatory attributes with example values
        # model = TokensForwardingSuccessToken()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()

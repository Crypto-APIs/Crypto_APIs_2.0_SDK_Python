"""
    CryptoAPIs

    Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: developers@cryptoapis.io
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import cryptoapis
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific_bitcoin import ListTransactionsByAddressResponseItemBlockchainSpecificBitcoin
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific_bitcoin_cash import ListTransactionsByAddressResponseItemBlockchainSpecificBitcoinCash
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific_dash import ListTransactionsByAddressResponseItemBlockchainSpecificDash
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific_dash_vin import ListTransactionsByAddressResponseItemBlockchainSpecificDashVin
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific_dash_vout import ListTransactionsByAddressResponseItemBlockchainSpecificDashVout
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific_dogecoin import ListTransactionsByAddressResponseItemBlockchainSpecificDogecoin
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific_ethereum import ListTransactionsByAddressResponseItemBlockchainSpecificEthereum
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific_ethereum_classic import ListTransactionsByAddressResponseItemBlockchainSpecificEthereumClassic
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific_ethereum_gas_price import ListTransactionsByAddressResponseItemBlockchainSpecificEthereumGasPrice
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific_litecoin import ListTransactionsByAddressResponseItemBlockchainSpecificLitecoin
globals()['ListTransactionsByAddressResponseItemBlockchainSpecificBitcoin'] = ListTransactionsByAddressResponseItemBlockchainSpecificBitcoin
globals()['ListTransactionsByAddressResponseItemBlockchainSpecificBitcoinCash'] = ListTransactionsByAddressResponseItemBlockchainSpecificBitcoinCash
globals()['ListTransactionsByAddressResponseItemBlockchainSpecificDash'] = ListTransactionsByAddressResponseItemBlockchainSpecificDash
globals()['ListTransactionsByAddressResponseItemBlockchainSpecificDashVin'] = ListTransactionsByAddressResponseItemBlockchainSpecificDashVin
globals()['ListTransactionsByAddressResponseItemBlockchainSpecificDashVout'] = ListTransactionsByAddressResponseItemBlockchainSpecificDashVout
globals()['ListTransactionsByAddressResponseItemBlockchainSpecificDogecoin'] = ListTransactionsByAddressResponseItemBlockchainSpecificDogecoin
globals()['ListTransactionsByAddressResponseItemBlockchainSpecificEthereum'] = ListTransactionsByAddressResponseItemBlockchainSpecificEthereum
globals()['ListTransactionsByAddressResponseItemBlockchainSpecificEthereumClassic'] = ListTransactionsByAddressResponseItemBlockchainSpecificEthereumClassic
globals()['ListTransactionsByAddressResponseItemBlockchainSpecificEthereumGasPrice'] = ListTransactionsByAddressResponseItemBlockchainSpecificEthereumGasPrice
globals()['ListTransactionsByAddressResponseItemBlockchainSpecificLitecoin'] = ListTransactionsByAddressResponseItemBlockchainSpecificLitecoin
from cryptoapis.model.list_transactions_by_address_response_item_blockchain_specific import ListTransactionsByAddressResponseItemBlockchainSpecific


class TestListTransactionsByAddressResponseItemBlockchainSpecific(unittest.TestCase):
    """ListTransactionsByAddressResponseItemBlockchainSpecific unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testListTransactionsByAddressResponseItemBlockchainSpecific(self):
        """Test ListTransactionsByAddressResponseItemBlockchainSpecific"""
        # FIXME: construct object with mandatory attributes with example values
        # model = ListTransactionsByAddressResponseItemBlockchainSpecific()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()

"""
    CryptoAPIs

    Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: developers@cryptoapis.io
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import cryptoapis
from cryptoapis.model.list_omni_transactions_by_address_response_item_fee import ListOmniTransactionsByAddressResponseItemFee
from cryptoapis.model.list_omni_transactions_by_address_response_item_recipients import ListOmniTransactionsByAddressResponseItemRecipients
from cryptoapis.model.list_omni_transactions_by_address_response_item_senders import ListOmniTransactionsByAddressResponseItemSenders
globals()['ListOmniTransactionsByAddressResponseItemFee'] = ListOmniTransactionsByAddressResponseItemFee
globals()['ListOmniTransactionsByAddressResponseItemRecipients'] = ListOmniTransactionsByAddressResponseItemRecipients
globals()['ListOmniTransactionsByAddressResponseItemSenders'] = ListOmniTransactionsByAddressResponseItemSenders
from cryptoapis.model.list_omni_transactions_by_address_response_item import ListOmniTransactionsByAddressResponseItem


class TestListOmniTransactionsByAddressResponseItem(unittest.TestCase):
    """ListOmniTransactionsByAddressResponseItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testListOmniTransactionsByAddressResponseItem(self):
        """Test ListOmniTransactionsByAddressResponseItem"""
        # FIXME: construct object with mandatory attributes with example values
        # model = ListOmniTransactionsByAddressResponseItem()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()

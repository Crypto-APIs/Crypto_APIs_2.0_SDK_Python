"""
    CryptoAPIs

    Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: developers@cryptoapis.io
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import cryptoapis
from cryptoapis.model.create_automatic_tokens_forwarding_rb_token_data_bitcoin_omni_token import CreateAutomaticTokensForwardingRBTokenDataBitcoinOmniToken
from cryptoapis.model.create_automatic_tokens_forwarding_rb_token_data_ethereum_token import CreateAutomaticTokensForwardingRBTokenDataEthereumToken
globals()['CreateAutomaticTokensForwardingRBTokenDataBitcoinOmniToken'] = CreateAutomaticTokensForwardingRBTokenDataBitcoinOmniToken
globals()['CreateAutomaticTokensForwardingRBTokenDataEthereumToken'] = CreateAutomaticTokensForwardingRBTokenDataEthereumToken
from cryptoapis.model.create_automatic_tokens_forwarding_rb_token_data import CreateAutomaticTokensForwardingRBTokenData


class TestCreateAutomaticTokensForwardingRBTokenData(unittest.TestCase):
    """CreateAutomaticTokensForwardingRBTokenData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testCreateAutomaticTokensForwardingRBTokenData(self):
        """Test CreateAutomaticTokensForwardingRBTokenData"""
        # FIXME: construct object with mandatory attributes with example values
        # model = CreateAutomaticTokensForwardingRBTokenData()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()

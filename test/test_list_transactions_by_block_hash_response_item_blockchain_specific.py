"""
    CryptoAPIs

    Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: developers@cryptoapis.io
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import cryptoapis
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific_bitcoin import ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoin
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific_bitcoin_cash import ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoinCash
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific_dash import ListTransactionsByBlockHashResponseItemBlockchainSpecificDash
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific_dash_vin import ListTransactionsByBlockHashResponseItemBlockchainSpecificDashVin
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific_dash_vout import ListTransactionsByBlockHashResponseItemBlockchainSpecificDashVout
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific_dogecoin import ListTransactionsByBlockHashResponseItemBlockchainSpecificDogecoin
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific_ethereum import ListTransactionsByBlockHashResponseItemBlockchainSpecificEthereum
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific_ethereum_classic import ListTransactionsByBlockHashResponseItemBlockchainSpecificEthereumClassic
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific_ethereum_gas_price import ListTransactionsByBlockHashResponseItemBlockchainSpecificEthereumGasPrice
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific_litecoin import ListTransactionsByBlockHashResponseItemBlockchainSpecificLitecoin
globals()['ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoin'] = ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoin
globals()['ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoinCash'] = ListTransactionsByBlockHashResponseItemBlockchainSpecificBitcoinCash
globals()['ListTransactionsByBlockHashResponseItemBlockchainSpecificDash'] = ListTransactionsByBlockHashResponseItemBlockchainSpecificDash
globals()['ListTransactionsByBlockHashResponseItemBlockchainSpecificDashVin'] = ListTransactionsByBlockHashResponseItemBlockchainSpecificDashVin
globals()['ListTransactionsByBlockHashResponseItemBlockchainSpecificDashVout'] = ListTransactionsByBlockHashResponseItemBlockchainSpecificDashVout
globals()['ListTransactionsByBlockHashResponseItemBlockchainSpecificDogecoin'] = ListTransactionsByBlockHashResponseItemBlockchainSpecificDogecoin
globals()['ListTransactionsByBlockHashResponseItemBlockchainSpecificEthereum'] = ListTransactionsByBlockHashResponseItemBlockchainSpecificEthereum
globals()['ListTransactionsByBlockHashResponseItemBlockchainSpecificEthereumClassic'] = ListTransactionsByBlockHashResponseItemBlockchainSpecificEthereumClassic
globals()['ListTransactionsByBlockHashResponseItemBlockchainSpecificEthereumGasPrice'] = ListTransactionsByBlockHashResponseItemBlockchainSpecificEthereumGasPrice
globals()['ListTransactionsByBlockHashResponseItemBlockchainSpecificLitecoin'] = ListTransactionsByBlockHashResponseItemBlockchainSpecificLitecoin
from cryptoapis.model.list_transactions_by_block_hash_response_item_blockchain_specific import ListTransactionsByBlockHashResponseItemBlockchainSpecific


class TestListTransactionsByBlockHashResponseItemBlockchainSpecific(unittest.TestCase):
    """ListTransactionsByBlockHashResponseItemBlockchainSpecific unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testListTransactionsByBlockHashResponseItemBlockchainSpecific(self):
        """Test ListTransactionsByBlockHashResponseItemBlockchainSpecific"""
        # FIXME: construct object with mandatory attributes with example values
        # model = ListTransactionsByBlockHashResponseItemBlockchainSpecific()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()

"""
    CryptoAPIs

    Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: developers@cryptoapis.io
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import cryptoapis
from cryptoapis.model.get_transaction_details_by_transaction_idribszv_shielded_spend import GetTransactionDetailsByTransactionIDRIBSZVShieldedSpend
from cryptoapis.model.list_transactions_by_block_height_ribsb import ListTransactionsByBlockHeightRIBSB
from cryptoapis.model.list_transactions_by_block_height_ribsbc import ListTransactionsByBlockHeightRIBSBC
from cryptoapis.model.list_transactions_by_block_height_ribsbsc import ListTransactionsByBlockHeightRIBSBSC
from cryptoapis.model.list_transactions_by_block_height_ribsbsc_gas_price import ListTransactionsByBlockHeightRIBSBSCGasPrice
from cryptoapis.model.list_transactions_by_block_height_ribsd import ListTransactionsByBlockHeightRIBSD
from cryptoapis.model.list_transactions_by_block_height_ribsd2 import ListTransactionsByBlockHeightRIBSD2
from cryptoapis.model.list_transactions_by_block_height_ribse import ListTransactionsByBlockHeightRIBSE
from cryptoapis.model.list_transactions_by_block_height_ribsec import ListTransactionsByBlockHeightRIBSEC
from cryptoapis.model.list_transactions_by_block_height_ribsl import ListTransactionsByBlockHeightRIBSL
from cryptoapis.model.list_transactions_by_block_height_ribsz import ListTransactionsByBlockHeightRIBSZ
from cryptoapis.model.list_transactions_by_block_height_ribsz_vin import ListTransactionsByBlockHeightRIBSZVin
from cryptoapis.model.list_transactions_by_block_height_ribsz_vout import ListTransactionsByBlockHeightRIBSZVout
from cryptoapis.model.list_transactions_by_block_height_ribszv_join_split import ListTransactionsByBlockHeightRIBSZVJoinSplit
from cryptoapis.model.list_transactions_by_block_height_ribszv_shielded_output import ListTransactionsByBlockHeightRIBSZVShieldedOutput
globals()['GetTransactionDetailsByTransactionIDRIBSZVShieldedSpend'] = GetTransactionDetailsByTransactionIDRIBSZVShieldedSpend
globals()['ListTransactionsByBlockHeightRIBSB'] = ListTransactionsByBlockHeightRIBSB
globals()['ListTransactionsByBlockHeightRIBSBC'] = ListTransactionsByBlockHeightRIBSBC
globals()['ListTransactionsByBlockHeightRIBSBSC'] = ListTransactionsByBlockHeightRIBSBSC
globals()['ListTransactionsByBlockHeightRIBSBSCGasPrice'] = ListTransactionsByBlockHeightRIBSBSCGasPrice
globals()['ListTransactionsByBlockHeightRIBSD'] = ListTransactionsByBlockHeightRIBSD
globals()['ListTransactionsByBlockHeightRIBSD2'] = ListTransactionsByBlockHeightRIBSD2
globals()['ListTransactionsByBlockHeightRIBSE'] = ListTransactionsByBlockHeightRIBSE
globals()['ListTransactionsByBlockHeightRIBSEC'] = ListTransactionsByBlockHeightRIBSEC
globals()['ListTransactionsByBlockHeightRIBSL'] = ListTransactionsByBlockHeightRIBSL
globals()['ListTransactionsByBlockHeightRIBSZ'] = ListTransactionsByBlockHeightRIBSZ
globals()['ListTransactionsByBlockHeightRIBSZVJoinSplit'] = ListTransactionsByBlockHeightRIBSZVJoinSplit
globals()['ListTransactionsByBlockHeightRIBSZVShieldedOutput'] = ListTransactionsByBlockHeightRIBSZVShieldedOutput
globals()['ListTransactionsByBlockHeightRIBSZVin'] = ListTransactionsByBlockHeightRIBSZVin
globals()['ListTransactionsByBlockHeightRIBSZVout'] = ListTransactionsByBlockHeightRIBSZVout
from cryptoapis.model.list_transactions_by_block_height_ribs import ListTransactionsByBlockHeightRIBS


class TestListTransactionsByBlockHeightRIBS(unittest.TestCase):
    """ListTransactionsByBlockHeightRIBS unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testListTransactionsByBlockHeightRIBS(self):
        """Test ListTransactionsByBlockHeightRIBS"""
        # FIXME: construct object with mandatory attributes with example values
        # model = ListTransactionsByBlockHeightRIBS()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()

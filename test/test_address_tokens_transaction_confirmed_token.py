"""
    CryptoAPIs

    Crypto APIs 2.0 is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs 2.0 can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs 2.0 provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: developers@cryptoapis.io
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import cryptoapis
from cryptoapis.model.address_tokens_transaction_confirmed_ethereumerc20token import AddressTokensTransactionConfirmedEthereumerc20token
from cryptoapis.model.address_tokens_transaction_confirmed_ethereumerc721token import AddressTokensTransactionConfirmedEthereumerc721token
from cryptoapis.model.address_tokens_transaction_confirmed_omnilayertoken import AddressTokensTransactionConfirmedOmnilayertoken
globals()['AddressTokensTransactionConfirmedEthereumerc20token'] = AddressTokensTransactionConfirmedEthereumerc20token
globals()['AddressTokensTransactionConfirmedEthereumerc721token'] = AddressTokensTransactionConfirmedEthereumerc721token
globals()['AddressTokensTransactionConfirmedOmnilayertoken'] = AddressTokensTransactionConfirmedOmnilayertoken
from cryptoapis.model.address_tokens_transaction_confirmed_token import AddressTokensTransactionConfirmedToken


class TestAddressTokensTransactionConfirmedToken(unittest.TestCase):
    """AddressTokensTransactionConfirmedToken unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testAddressTokensTransactionConfirmedToken(self):
        """Test AddressTokensTransactionConfirmedToken"""
        # FIXME: construct object with mandatory attributes with example values
        # model = AddressTokensTransactionConfirmedToken()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
